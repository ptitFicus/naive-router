import t,{useRef as e,useState as s,useEffect as n}from"react";function o(t){return t.startsWith("{")}function u(t){return t.split("/").filter(t=>t.length>0)}const r=new class{constructor(){this.notFound=!0,this.queue=[],this.notFoundQueue=[],this.callbackScheduled=!1}suscribe(t){this.queue.push(t),this.callbackScheduled||(this.callbackScheduled=!0,this.scheduleBroadcast())}suscribeNotFound(t){this.notFoundQueue.push(t),this.callbackScheduled||(this.callbackScheduled=!0,this.scheduleBroadcast())}scheduleBroadcast(){Promise.resolve().then(()=>{this.broadcast(),this.callbackScheduled=!1})}unsuscribe(t){this._unsuscribe(t,this.queue),this._unsuscribe(t,this.notFoundQueue)}_unsuscribe(t,e){const s=e.indexOf(t);-1!==s&&e.splice(s,1)}broadcast(){this.queue.reduce((t,e)=>e()||t,!1)?this.notFound&&(this.notFound=!1,this.hideNotFoundRoutes()):(this.notFound=!0,this.displayNotFoundRoutes())}hideNotFoundRoutes(){this.notFoundQueue.forEach(t=>t(!0))}displayNotFoundRoutes(){this.notFoundQueue.forEach(t=>t(!1))}},c=(t=>e=>{const s=Symbol();window.history[s]=window.history[e],window.history[e]=(...e)=>{window.history[s](...e),t()}})(()=>r.broadcast());function i(c){return function({path:i,children:h}){const l=e({}),[{displayed:p,queryParams:b,pathParams:f},w]=s({displayed:!1});if(n(()=>{l.current.path=i,l.current.displayed=p},[i,p]),n(()=>{const t=t=>{let e=!1;const{path:s,displayed:n}=l.current;if(c)e=!t;else{const{pathname:t}=new URL(window.location.href);e=function(t,e){const s=u(t),n=u(e);return s.length===n.length&&(!!s.map((t,e)=>!!o(t)||t===n[e]).reduce((t,e)=>t&&e,!0)&&n.map((t,e)=>o(s[e])?[[s[e].replace(/{|}/g,"")],t]:null).filter(t=>null!==t).reduce((t,[e,s])=>(t[e]=s,t),{}))}(s,t)}return e?w({displayed:!0,queryParams:a(),pathParams:e}):!e&&n&&w({displayed:!1}),!!e};return c?r.suscribeNotFound(t):r.suscribe(t),()=>{r.unsuscribe(t)}},[]),d(h))return p?h(f,b):null;const F={...b,...f};return p?t.Children.map(h,e=>t.cloneElement(e,F)):null}}function a(){const t=new URLSearchParams(window.location.search),e={};for(const[s,n]of t.entries())e[s]=n;return e}c("pushState"),c("back"),c("forward"),c("go"),c("replaceState"),window.addEventListener("popstate",()=>r.broadcast());const d=t=>{const e=(t=>{return t&&{}.toString.call(t)})(t);return e&&"[object Function]"===e},h=i(!1),l=i(!0);export{l as NotFound,h as Route};
