import t,{useRef as e,useState as n,useEffect as s}from"react";function o(t){return t.startsWith("{")}function u(t){return t.split("/").filter(t=>t.length>0)}class i{constructor(){this.notFound=!0,this.queue=[],this.notFoundQueue=[],this.callbackScheduled=!1}suscribe(t){this.queue.push(t),this.callbackScheduled||(this.callbackScheduled=!0,this.scheduleBroadcast())}suscribeNotFound(t){this.notFoundQueue.push(t),this.callbackScheduled||(this.callbackScheduled=!0,this.scheduleBroadcast())}scheduleBroadcast(){Promise.resolve().then(()=>{this.broadcast(),this.callbackScheduled=!1})}unsuscribe(t){this._unsuscribe(t,this.queue),this._unsuscribe(t,this.notFoundQueue)}_unsuscribe(t,e){const n=e.indexOf(t);-1!==n&&e.splice(n,1)}broadcast(){this.queue.reduce((t,e)=>e()||t,!1)?this.notFound&&(this.notFound=!1,this.hideNotFoundRoutes()):(this.notFound=!0,this.displayNotFoundRoutes())}hideNotFoundRoutes(){this.notFoundQueue.forEach(t=>t(!0))}displayNotFoundRoutes(){this.notFoundQueue.forEach(t=>t(!1))}}const r=Symbol();function c(i){return function({path:c,children:l}){const w=e({}),[{displayed:p,queryParams:b,pathParams:f},m]=n({displayed:!1});if(s(()=>{w.current.path=c,w.current.displayed=p},[c,p]),s(()=>{h();const t=t=>{let e=!1;const{path:n,displayed:s}=w.current;if(i)e=!t;else{const{pathname:t}=new URL(window.location.href);e=function(t,e){const n=u(t),s=u(e);return n.length===s.length&&(!!n.map((t,e)=>!!o(t)||t===s[e]).reduce((t,e)=>t&&e,!0)&&s.map((t,e)=>o(n[e])?[[n[e].replace(/{|}/g,"")],t]:null).filter(t=>null!==t).reduce((t,[e,n])=>(t[e]=n,t),{}))}(n,t)}return e?m({displayed:!0,queryParams:d(),pathParams:e}):!e&&s&&m({displayed:!1}),!!e};return i?window[r].suscribeNotFound(t):window[r].suscribe(t),window.addEventListener("popstate",t),()=>{window[r].unsuscribe(t),window.removeEventListener("popstate",t)}},[]),a(l))return p?l(f,b):null;const y={...b,...f};return p?t.Children.map(l,e=>t.cloneElement(e,y)):null}}function d(){const t=new URLSearchParams(window.location.search),e={};for(const[n,s]of t.entries())e[n]=s;return e}const a=t=>{const e=(t=>{return t&&{}.toString.call(t)})(t);return e&&"[object Function]"===e},h=()=>{if(!window[r]){window[r]=new i;const t=(t=>e=>{const n=Symbol();window.history[n]=window.history[e],window.history[e]=(...e)=>{window.history[n](...e),t()}})(()=>window[r].broadcast());t("pushState"),t("back"),t("forward"),t("go"),t("replaceState")}},l=c(!1),w=c(!0);export{w as NotFound,l as Route};
